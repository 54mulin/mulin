import {
  VImg
} from "./chunk-LWH3PK44.js";
import {
  useDisplay
} from "./chunk-NO2N6P3S.js";
import "./chunk-2PSEIA2V.js";
import {
  VBtn
} from "./chunk-RGQV63EG.js";
import "./chunk-WBKOHZLE.js";
import "./chunk-HY4TT6YP.js";
import "./chunk-FKTGRHX4.js";
import "./chunk-OO5WTYF3.js";
import {
  VDefaultsProvider
} from "./chunk-CDDWGHEW.js";
import {
  VIcon,
  makeSizeProps
} from "./chunk-3HPWFZUT.js";
import {
  makeDimensionProps,
  useDimension
} from "./chunk-IEJI7OJY.js";
import "./chunk-H4Q66TID.js";
import "./chunk-DBEKME2H.js";
import "./chunk-NYLJDJWI.js";
import "./chunk-JUYXCQCJ.js";
import "./chunk-MYWG37JH.js";
import "./chunk-SVMIDIYV.js";
import {
  useBackgroundColor
} from "./chunk-YA4VC5YD.js";
import "./chunk-KR424Z6M.js";
import {
  IconValue
} from "./chunk-MA72TZMQ.js";
import "./chunk-ERYYPBOA.js";
import "./chunk-TONHLXTD.js";
import "./chunk-VS2VO2V5.js";
import {
  makeThemeProps,
  provideTheme
} from "./chunk-CVXWXYHH.js";
import {
  convertToUnit,
  genericComponent,
  makeComponentProps,
  propsFactory,
  useRender
} from "./chunk-W7UAKLOJ.js";
import {
  Fragment,
  createVNode,
  toRef
} from "./chunk-U6BEPC57.js";

// node_modules/vuetify/lib/components/VEmptyState/VEmptyState.mjs
import "/Users/mulin/mulin/node_modules/vuetify/lib/components/VEmptyState/VEmptyState.css";
var makeVEmptyStateProps = propsFactory({
  actionText: String,
  bgColor: String,
  color: String,
  icon: IconValue,
  image: String,
  justify: {
    type: String,
    default: "center"
  },
  headline: String,
  title: String,
  text: String,
  textWidth: {
    type: [Number, String],
    default: 500
  },
  href: String,
  to: String,
  ...makeComponentProps(),
  ...makeDimensionProps(),
  ...makeSizeProps({
    size: void 0
  }),
  ...makeThemeProps()
}, "VEmptyState");
var VEmptyState = genericComponent()({
  name: "VEmptyState",
  props: makeVEmptyStateProps(),
  emits: {
    "click:action": (e) => true
  },
  setup(props, _ref) {
    let {
      emit,
      slots
    } = _ref;
    const {
      themeClasses
    } = provideTheme(props);
    const {
      backgroundColorClasses,
      backgroundColorStyles
    } = useBackgroundColor(toRef(props, "bgColor"));
    const {
      dimensionStyles
    } = useDimension(props);
    const {
      displayClasses
    } = useDisplay();
    function onClickAction(e) {
      emit("click:action", e);
    }
    useRender(() => {
      var _a, _b, _c;
      const hasActions = !!(slots.actions || props.actionText);
      const hasHeadline = !!(slots.headline || props.headline);
      const hasTitle = !!(slots.title || props.title);
      const hasText = !!(slots.text || props.text);
      const hasMedia = !!(slots.media || props.image || props.icon);
      const size = props.size || (props.image ? 200 : 96);
      return createVNode("div", {
        "class": ["v-empty-state", {
          [`v-empty-state--${props.justify}`]: true
        }, themeClasses.value, backgroundColorClasses.value, displayClasses.value, props.class],
        "style": [backgroundColorStyles.value, dimensionStyles.value, props.style]
      }, [hasMedia && createVNode("div", {
        "key": "media",
        "class": "v-empty-state__media"
      }, [!slots.media ? createVNode(Fragment, null, [props.image ? createVNode(VImg, {
        "key": "image",
        "src": props.image,
        "height": size
      }, null) : props.icon ? createVNode(VIcon, {
        "key": "icon",
        "color": props.color,
        "size": size,
        "icon": props.icon
      }, null) : void 0]) : createVNode(VDefaultsProvider, {
        "key": "media-defaults",
        "defaults": {
          VImg: {
            src: props.image,
            height: size
          },
          VIcon: {
            size,
            icon: props.icon
          }
        }
      }, {
        default: () => [slots.media()]
      })]), hasHeadline && createVNode("div", {
        "key": "headline",
        "class": "v-empty-state__headline"
      }, [((_a = slots.headline) == null ? void 0 : _a.call(slots)) ?? props.headline]), hasTitle && createVNode("div", {
        "key": "title",
        "class": "v-empty-state__title"
      }, [((_b = slots.title) == null ? void 0 : _b.call(slots)) ?? props.title]), hasText && createVNode("div", {
        "key": "text",
        "class": "v-empty-state__text",
        "style": {
          maxWidth: convertToUnit(props.textWidth)
        }
      }, [((_c = slots.text) == null ? void 0 : _c.call(slots)) ?? props.text]), slots.default && createVNode("div", {
        "key": "content",
        "class": "v-empty-state__content"
      }, [slots.default()]), hasActions && createVNode("div", {
        "key": "actions",
        "class": "v-empty-state__actions"
      }, [createVNode(VDefaultsProvider, {
        "defaults": {
          VBtn: {
            class: "v-empty-state__action-btn",
            color: props.color,
            text: props.actionText
          }
        }
      }, {
        default: () => {
          var _a2;
          return [((_a2 = slots.actions) == null ? void 0 : _a2.call(slots, {
            props: {
              onClick: onClickAction
            }
          })) ?? createVNode(VBtn, {
            "onClick": onClickAction
          }, null)];
        }
      })])]);
    });
    return {};
  }
});
export {
  VEmptyState
};
//# sourceMappingURL=vuetify_lib_components_VEmptyState_index__mjs.js.map
